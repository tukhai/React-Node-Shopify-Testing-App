/// <reference types="hoist-non-react-statics" />
import React from 'react';
import { WithAppProviderProps } from '../../utilities/with-app-provider';
export declare type Size = 'small' | 'medium' | 'large';
export interface AvatarProps {
    /**
     * Size of avatar
     * @default 'medium'
     */
    size?: Size;
    /** The name of the person */
    name?: string;
    /** Initials of person to display */
    initials?: string;
    /** Whether the avatar is for a customer */
    customer?: boolean;
    /** URL of the avatar image which falls back to initials if the image fails to load */
    source?: string;
    /** Accessible label for the avatar image */
    accessibilityLabel?: string;
}
interface State {
    hasError: boolean;
    hasLoaded: boolean;
    prevSource?: string;
}
declare type CombinedProps = AvatarProps & WithAppProviderProps;
declare class Avatar extends React.PureComponent<CombinedProps, State> {
    static getDerivedStateFromProps(props: AvatarProps, state: State): {
        prevSource: string | undefined;
        hasError: boolean;
        hasLoaded: boolean;
    } | null;
    state: State;
    render(): JSX.Element;
    handleError: () => void;
    handleLoad: () => void;
}
declare const _default: React.FunctionComponent<AvatarProps> & import("hoist-non-react-statics").NonReactStatics<(React.ComponentClass<CombinedProps, any> & typeof Avatar) | (React.FunctionComponent<CombinedProps> & typeof Avatar), {}>;
export default _default;
