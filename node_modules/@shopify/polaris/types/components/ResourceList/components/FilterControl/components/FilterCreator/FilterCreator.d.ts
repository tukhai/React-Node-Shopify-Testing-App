/// <reference types="hoist-non-react-statics" />
import React from 'react';
import { WithAppProviderProps } from '../../../../../../utilities/with-app-provider';
import { AppliedFilter, Filter } from '../../types';
export interface FilterCreatorProps {
    filters: Filter[];
    resourceName: {
        singular: string;
        plural: string;
    };
    disabled?: boolean;
    onAddFilter?(newFilter: AppliedFilter): void;
}
declare type CombinedProps = FilterCreatorProps & WithAppProviderProps;
interface State {
    popoverActive: boolean;
    selectedFilter?: Filter;
    selectedFilterKey?: AppliedFilter['key'];
    selectedFilterValue?: AppliedFilter['value'];
}
declare class FilterCreator extends React.PureComponent<CombinedProps, State> {
    state: State;
    private node;
    private readonly canAddFilter;
    render(): JSX.Element;
    private handleButtonFocus;
    private togglePopover;
    private handleFilterKeyChange;
    private handleFilterValueChange;
    private handleAddFilter;
}
declare const _default: React.FunctionComponent<FilterCreatorProps> & import("hoist-non-react-statics").NonReactStatics<(React.ComponentClass<CombinedProps, any> & typeof FilterCreator) | (React.FunctionComponent<CombinedProps> & typeof FilterCreator), {}>;
export default _default;
